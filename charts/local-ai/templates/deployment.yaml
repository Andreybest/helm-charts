{{- $urls := "" -}}
{{- range $idx, $model := .Values.models.list }}
{{- $urls = printf "%s%s," $urls $model.url }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "local-ai.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "local-ai.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "local-ai.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      name: {{ template "local-ai.fullname" . }}
      labels:
        app.kubernetes.io/name: {{ include "local-ai.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: download-model
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              url_csv={{ $urls | quote }}
              IFS=','

              for url in $url_csv; do
                filename=$(basename "$url")
                
                if [ -f "/models/$filename" ]; then
                    echo "Model $filename already exists. Skipping download."
                else
                    echo "Downloading $filename..."
                    wget "$url" -P /models

                    if [ "$?" -ne 0 ]; then
                      echo "Download failed."
                    else
                      echo "Download completed."
                    fi
                fi
              done
          volumeMounts:
          - mountPath: {{ .Values.deployment.env.modelsPath }}
            name: models
      containers:
        - name: {{ template "local-ai.fullname" . }}
          image: {{ .Values.deployment.image }}
          env:
          - name: THREADS
            value: {{ .Values.deployment.env.threads | quote }}
          - name: CONTEXT_SIZE
            value: {{ .Values.deployment.env.contextSize | quote }}
          - name: MODELS_PATH
            value: {{ .Values.deployment.env.modelsPath }}
          volumeMounts:
          - mountPath: {{ .Values.deployment.env.modelsPath }}
            name: models
      volumes:
      {{- if .Values.models.persistence.enabled }}
      - name: models
        persistentVolumeClaim:
          claimName: {{ template "local-ai.fullname" . }}
      {{- else }}
      - name: models
        emptyDir: {}
      {{- end }}
